<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CAAAc/j3v/8XQl79uBL1pisAAAAASUVORK5CYII=
</value>
  </data>
</root>